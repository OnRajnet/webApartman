---
import "photoswipe/style.css";
import { Image } from "astro:assets";

export interface Props {
  id: string;
  images: ImageMetadata[];
}

const { id, images } = Astro.props;

const imagetitles = images.map(
  (image) => image.src.split("/").reverse()[0].split(".")[0],
);
---

<style>
  .pswp--custom-icon-colors {
    --pswp-icon-color: #eee;
    --pswp-icon-color-secondary: #663399;
  }

  .pswp__dynamic-caption--aside {
    max-width: 300px;
    padding: 20px 15px 20px 20px;
    margin-top: 70px;
  }

  .pswp__dynamic-caption--below {
    max-width: 700px;
    padding: 15px 0 0;
  }

  .pswp__dynamic-caption--mobile {
    padding: 10px 15px;
  }
</style>
<lightbox-inner data-id={id}>
  {
    images.map((image, i) => (
      <figure
        itemscope
        itemtype="http://schema.org/ImageObject"
        class="mb-4 box-shadow-sm">
        <a
          href={image.src}
          itemprop="contentUrl"
          data-pswp-width={image.width}
          data-pswp-height={image.height}>
          <Image
            src={image}
            alt={imagetitles[i]}
            width={600}
            height={(image.height * 600) / image.width}
            format="webp"
            class="rounded"
          />
        </a>
      </figure>
    ))
  }
</lightbox-inner>

<script>
  import PhotoSwipeLightbox from "photoswipe/lightbox";

  class LightboxInner extends HTMLElement {
    constructor() {
      super();

      const id = this.dataset.id;

      const lightbox = new PhotoSwipeLightbox({
        mainClass: "pswp--custom-icon-colors",
        gallerySelector: "#" + id,
        childSelector: "a",
        pswpModule: () => import("photoswipe"),
        paddingFn: () => {
          return {
            top: 0,
            bottom: 30,
            left: 0,
            right: 0,
          };
        },
      });

      lightbox.init();
    }
  }

  customElements.define("lightbox-inner", LightboxInner);
</script>
